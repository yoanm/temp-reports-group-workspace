name: TODO
description: TODO

inputs:
  path:
    description: A group directory or a glob pattern in order to find group directories and merge their metadata
    required: true
  project-token:
    description: Codacy project token for the repository
    required: true
  language: # @TODO see if doable to embed it on group metadata !
    description: Force the language linked to the uploaded reports.
    required: false
  force-coverage-parser: # @TODO see if doable to embed it on group metadata ! (extra properties ?)
    description: Force the coverage parser used to parse uploaded reports
    required: false
  coverage-reporter-version: # @TODO see if doable to embed it on group metadata ! (extra properties ?)
    description: Force CLI uploader version
    required: false
  follow-symbolic-links:
    description: Indicates whether to follow symbolic links when resolving `path`
    required: false
    default: 'false'

outputs:
  groups:
    description: TODO
    value: ${{ steps.build-outputs.outputs.groups }}
  reports:
    description: TODO
    value: ${{ steps.build-outputs.outputs.reports }}

runs:
  using: "composite"
  steps:
    # Even if an input is marked as "required", an empty value (or no value) may be passed !
    - name: Validate inputs
      uses: actions/github-script@v7
      env:
        INPUT_PATH: ${{ inputs.path }}
        INPUT_PROJECT-TOKEN: ${{ inputs.project-token }}
      with:
        script: |
          core.info('Validate inputs');
          
          core.getInput('path', {required: true});
          core.getInput('project-token', {required: true});

    - name: Load groups metadata
      id: load-metadata
      uses: yoanm/temp-reports-group-workspace/gha-load-metadata@improve
      with:
        path: ${{ inputs.path }}
        format: string # String in order to concatenate interesting values
        glue-string: ',' # Ensure glue string as it's the expected one by the uploader
        follow-symbolic-links: ${{ inputs.follow-symbolic-links }}

    - name: Build uploader option
      id: build-uploader-options
      uses: actions/github-script@v7
      env:
        METADATA: ${{ steps.load-metadata.outputs.metadata }}
      with:
        script: |
          core.info('Build uploader options');
          const {METADATA} = process.env;
          
          const metadata = JSON.parse(METADATA);
          core.setOutput('coverage-reports', metadata.reports); // Trusted path as it comes from trusted metadata (=from `reports-group/load-metadata`)

    - name: Ensure at least one report to upload
      if: ${{ '' == steps.build-uploader-options.outputs.coverage-reports }}
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Unable to retrieve any report to upload. Something wrong most likely happened !');

    - name: Upload to codacy
      id: upload
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        coverage-reports: ${{ steps.build-uploader-options.outputs.coverage-reports }}
        project-token: ${{ inputs.project-token }}
        language: ${{ inputs.language }}
        force-coverage-parser: ${{ inputs.force-coverage-parser }}
        coverage-reporter-version: ${{ inputs.coverage-reporter-version }}

    - name: Build action outputs
      id: build-outputs
      uses: actions/github-script@v7
      env:
        METADATA: ${{ steps.load-metadata.outputs.metadata }}
        REPORTS: ${{ steps.build-uploader-options.outputs.coverage-reports }}
      with:
        script: |
          core.info('Build output');
          const {REPORTS, METADATA} = process.env;

          const metadata = JSON.parse(METADATA);
          core.setOutput('groups', metadata.path.split(',').join('\n')); // Trusted path as it comes from trusted metadata (=from `reports-group/load-metadata`)
          core.setOutput('reports', REPORTS.split(',').join('\n')); // Trusted path, see `build-uploader-options` step
