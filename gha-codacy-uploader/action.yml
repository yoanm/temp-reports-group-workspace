name: TODO
description: TODO

inputs:
  path:
    description: A group directory or a glob pattern in order to find group directories and merge their metadata
    required: true
  project-token:
    description: Codacy project token for the repository
    required: true
  ## >>> Override Git/GitHub info linked to the uploaded reports >>>
  force-git-commit: # @TODO see if doable to embed it on group metadata ! (extra properties ?)
    description: |
      Override the commit SHA linked to the uploaded reports, rather than relying on uploader auto-discovery.
      Mostly useful for specific cases (e.g. `workflow_run` workflow).
  ## <<< Override Git/GitHub info linked to the uploaded reports <<<
  ## >>> Override underlying uploader inputs >>>
  force-uploader-language: # @TODO see if doable to embed it on group metadata !
    description: Force the language linked to the uploaded reports.
    required: false
  force-uploader-coverage-parser: # @TODO see if doable to embed it on group metadata ! (extra properties ?)
    description: Force the coverage parser used to parse uploaded reports
    required: false
  force-uploader-cli-version: # @TODO see if doable to embed it on group metadata ! (extra properties ?)
    description: Force CLI uploader version
    required: false
  ## <<< Override underlying uploader inputs <<<
  follow-symbolic-links:
    description: Indicates whether to follow symbolic links when resolving `path`
    required: false
    default: 'false'

outputs:
  groups:
    description: TODO
    value: ${{ steps.build-outputs.outputs.groups }}
  reports:
    description: TODO
    value: ${{ steps.build-outputs.outputs.reports }}
  metadata:
    description: TODO
    value: ${{ steps.load-metadata.outputs.json }}

runs:
  using: "composite"
  steps:
    # Even if an input is marked as "required", an empty value (or no value) may be passed !
    - name: Validate inputs
      uses: actions/github-script@v7
      env:
        INPUT_PATH: ${{ inputs.path }}
        INPUT_PROJECT-TOKEN: ${{ inputs.project-token }}
      with:
        script: |
          core.info('Validate inputs');
          
          core.getInput('path', {required: true});
          core.getInput('project-token', {required: true});

    - name: Load groups metadata
      id: load-metadata
      uses: yoanm/temp-reports-group-workspace/gha-load-metadata@from-sub-folders
      with:
        path: ${{ inputs.path }}
        format: string # String in order to concatenate interesting values
        glue-string: ',' # Ensure glue string as it's the expected one by the uploader
        follow-symbolic-links: ${{ inputs.follow-symbolic-links }}

    - name: Upload to codacy
      id: upload
      uses: yoanm/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ inputs.project-token }}
        coverage-reports: ${{ steps.load-metadata.outputs.reports }}
        language: ${{ inputs.force-uploader-language }}
        force-coverage-parser: ${{ inputs.force-uploader-coverage-parser }}
        force-commit-sha: ${{ inputs.force-git-commit }}
        coverage-reporter-version: ${{ inputs.force-uploader-cli-version }}

    - name: Build action outputs
      id: build-outputs
      uses: actions/github-script@v7
      env:
        GROUPS: ${{ steps.load-metadata.outputs.names }}
        PATHS: ${{ steps.load-metadata.outputs.paths }}
        REPORTS: ${{ steps.load-metadata.outputs.reports }}
      with:
        script: |
          core.info('Build output');
          const {REPORTS, PATHS, GROUPS} = process.env;
          const path = require('path');
          const pathList = PATHS.split(',').map(p => path.dirname(p));
          const reports = REPORTS.split(',').map(report => pathList.reduce((acc, p) => acc.replace(p, ''), report).substring(1)).join('\n');
          
          core.setOutput('groups', GROUPS.split(',').join('\n'));
          core.setOutput('reports', reports); // // Trusted path as it comes from trusted metadata (=from `reports-group/load-metadata`)
